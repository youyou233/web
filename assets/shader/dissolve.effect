// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.

CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        texture: { value: white }
        fade_pct: { value: 1.0 }
        addColor: { value: [0.8, 0.8, 0.8, 0] }
}%


CCProgram vs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>

  in vec3 a_position;
  in vec4 a_color;
  out vec4 v_color;

  #if USE_TEXTURE
  in vec2 a_uv0;
  out vec2 v_uv0;
  #endif

  void main () {
    vec4 pos = vec4(a_position, 1.0);

    #if CC_USE_MODEL
    pos = cc_matViewProj * cc_matWorld * pos;
    #else
    pos = cc_matViewProj * pos;
    #endif

    #if USE_TEXTURE
    v_uv0 = a_uv0;
    #endif

    v_color = a_color;

    gl_Position = pos;
  }
}%


CCProgram fs %{
  precision highp float;

  #include <alpha-test>
 #include <texture>
  #if USE_TEXTURE
  in vec2 v_uv0;
  in vec4 v_color;
  uniform sampler2D texture;
  uniform ARGS {
		float fade_pct;
	};
  uniform LAMYOUM_COM {
    vec4 addColor;
  };
  #endif

  void main () {
    vec4 color = vec4(1.0, 1.0, 1.0, 1.0);
   
    #if USE_TEXTURE
   
    CCTexture(texture, v_uv0, color);
     // color *= texture(texture, v_uv0);
    
    #endif
    #if USE_TINT
    color *= v_color;
    #endif
    // 当颜色小于溶解的程度，则直接抛弃
		if(color.b < fade_pct) discard;
    if(color.b < fade_pct + 0.1) {
      // 对溶解的边缘做处理，变色或者改透明度等等
			color = color * vec4(0.92, 0.8, 0.3, color.a);
		}
    if(color.a>.0){
      color = vec4(color.r+(addColor.r*color.a),color.g+(addColor.g*color.a),color.b+(addColor.b*color.a),color.a);
    }
    
    gl_FragColor = color;
  }
}%
