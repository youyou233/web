{
  "ver": "1.0.27",
  "uuid": "c8362e1e-539e-485b-a880-4f0dc6fbd559",
  "importer": "effect",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n#if USE_TEXTURE\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}",
        "frag": "\n  precision highp float;\n  varying vec4 v_color;\nuniform vec4 cc_time;\n  #if USE_TEXTURE\n  varying vec2 v_uv0;\n  uniform sampler2D texture;\n  #endif\n  uniform vec4 u_OutlineColor;\nuniform vec4 textureSize;\nuniform float u_colorMult;\nuniform float u_OutlineSize;\n  vec4 getIsStrokeWithAngel(float angel,vec2 v_texCoord,float outlineSize)\n  {\n    float stroke = 0.0;\n    float rad = angel * 0.01745329252;\n    vec2 unit = 1.0 / textureSize.xy;\n    vec2 offset = vec2(outlineSize * cos(rad) * unit.x, outlineSize * sin(rad) * unit.y);\n    return texture2D(texture, v_texCoord + offset);\n  }\n  void main () {\n    vec2 uv = v_uv0;vec2 st = uv;;\n    vec4 tex = texture2D(texture,v_uv0);\n    vec3 color = tex.xyz;\n    vec2 unit = 1.0 / textureSize.xy;\n    float a = tex.a;\n    if( tex.a > 0.1 ){\n      gl_FragColor = tex * v_color;\n      return;\n    }\n    float anim_mul = (0.5 + 0.5 + 0.5 * sin(cc_time.x * 4.) * 0.7);\n    float outlineSize = u_OutlineSize;\n    float count = 0.;\n    for( float idx = 0.;idx < float(LAYERS);idx++){\n      for(float angel = 0.0; angel < 360.0; angel += 2.)\n        {\n          vec4 ret = getIsStrokeWithAngel(angel,uv,outlineSize * idx);\n          float isa = step(0.001,ret.a);\n          count += 1. * isa;\n          color += ret.xyz * isa;\n        }\n    }\n    a = color.r * count / 360. / 2.;\n    #if USE_COLOR\n    color = u_OutlineColor.xyz * count;\n    #endif\n    color /= 360.0 / 2.;\n    color *= u_colorMult * anim_mul;\n    color *= count * 0.02;\n    color = pow(color,vec3(1.3));\n    gl_FragColor = vec4(color,color.r * color.g * color.b * 10.) * v_color;\n    gl_FragColor = vec4(color,(color.r + color.g + color.b) * 0.05 ) * v_color;\n  }"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n#if USE_TEXTURE\nin vec2 a_uv0;\nout vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}",
        "frag": "\n  precision highp float;\n  in vec4 v_color;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\n  #if USE_TEXTURE\n  in vec2 v_uv0;\n  uniform sampler2D texture;\n  #endif\n  uniform Constants1 {\n    vec4 u_OutlineColor;\n    vec4 textureSize;\n    float u_colorMult;\n    float u_OutlineSize;\n  };\n  vec4 getIsStrokeWithAngel(float angel,vec2 v_texCoord,float outlineSize)\n  {\n    float stroke = 0.0;\n    float rad = angel * 0.01745329252;\n    vec2 unit = 1.0 / textureSize.xy;\n    vec2 offset = vec2(outlineSize * cos(rad) * unit.x, outlineSize * sin(rad) * unit.y);\n    return texture2D(texture, v_texCoord + offset);\n  }\n  void main () {\n    vec2 uv = v_uv0;vec2 st = uv;;\n    vec4 tex = texture2D(texture,v_uv0);\n    vec3 color = tex.xyz;\n    vec2 unit = 1.0 / textureSize.xy;\n    float a = tex.a;\n    if( tex.a > 0.1 ){\n      gl_FragColor = tex * v_color;\n      return;\n    }\n    float anim_mul = (0.5 + 0.5 + 0.5 * sin(cc_time.x * 4.) * 0.7);\n    float outlineSize = u_OutlineSize;\n    float count = 0.;\n    for( float idx = 0.;idx < float(LAYERS);idx++){\n      for(float angel = 0.0; angel < 360.0; angel += 2.)\n        {\n          vec4 ret = getIsStrokeWithAngel(angel,uv,outlineSize * idx);\n          float isa = step(0.001,ret.a);\n          count += 1. * isa;\n          color += ret.xyz * isa;\n        }\n    }\n    a = color.r * count / 360. / 2.;\n    #if USE_COLOR\n    color = u_OutlineColor.xyz * count;\n    #endif\n    color /= 360.0 / 2.;\n    color *= u_colorMult * anim_mul;\n    color *= count * 0.02;\n    color = pow(color,vec3(1.3));\n    gl_FragColor = vec4(color,color.r * color.g * color.b * 10.) * v_color;\n    gl_FragColor = vec4(color,(color.r + color.g + color.b) * 0.05 ) * v_color;\n  }"
      }
    }
  ],
  "subMetas": {}
}